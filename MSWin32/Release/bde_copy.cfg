# Configuration file for bde_copy
# $Id: bde_copy.cfg -1   $

# bde_repository - if the input file is entered as an abbreviated name (eg sco) then
# this is where it will be searched.

bde_repository \\bde_server\bde_data

# metadata_extension - if supplied then the metadata about the extract will be read
# from a separate file with this extension rather than from the main BDE file.
# The extension can be followed by a keyword optional to indicate that if the file
# does not exist, then the metadata should be read from the BDE file directly.
# Use metadata_extension none to force using infile metadata

# metadata_extension .metadata optional

# Fixes for incorrect BDE field names in file header
# BDE file name followed by fields defined as name=type

field_override ct01 type=string count=integer
field_override ct02 type=string count=integer

# File buffer size - buffer used for data read from the input file, and for
# gzip code. Must be at least 4096 bytes.

# file_buffer_size 1048576
# gzip_buffer_size 1048576

# Maximum number of data fields in a file that can be processed.  Default is 64

# max_fields 64

# Output field and line terminators
#
# The characters can include \xHH where HH are define a character as a hex value
# \r, \n, \t, \s for carriage return (\x0D), new line (\x0A), tab (\x0I) and 
# space (\x20).  Use \\ for a backslash character. Any other character after a
# backslash is unaltered.
#
# Multi-character terminators are valid

field_separator |
line_terminator |\x0A

# field delimiters.
# Enter as one of 
# field_delimiter delim
# field_delimiter start_delim end_delim
# field_delimiter type start_delim end_delim
# Use "none" to indicate a blank (completely empty) delimiter.
# type is one of number, date, datetime, text, or geometry

# Column headers - either yes or no

column_header no

# Error types .. 
# Errors can be one of
#  date_range
#  invalid_char
#  column_count
#  file_size
#
# Each can be ignore, warning, error, or fatal.  Warnings just generate a 
# message.  Errors count towards a total error count, which if it exceeds the 
# specified limit generates a fatal error.  Fatal error stop immediately and
# do not generate an output data file.

error_type date_range warning
error_type invalid_char warning
error_type column_count error
error_type file_size warning

# Handle out of range dates.  Dates with year less than minimum_year will be
# replaced with the invalid date or datetime value.

minimum_year 0 
invalid_datetime_string 1800-01-01 00:00:00
invalid_date_string 01/01/1800

# Spatial field fixups - WKT prefix and longitude offset
# wkt_prefix can be "leave", to leave the prefix completely unchanged,
# "none", to remove the existing prefix, or any other string, which
# will replace the existing prefix.
# Longitude offset is added to all longitudes.

# wkt_prefix SRID=4167;
# longitude_offset 160.0

# Character mapping for text fields.  Each replace consists of a 
# character or sequence of characters to be replaced, 
# and a list of characters to replace it.  The characters must be
# entered without any spaces.
# Use \x20 or \s to output a space.
# A missing list or the word "none" can be used to indicate nothing is
# output.  
# Anything after the last character is treated as an invalid char
# message and generates an invalid char error

# ASCII character mappings

# eg: Pipes and slaches deleted replaced by spaces
# replace | \x20
# replace \\ \x20

# Carriage return and line feed replaced by \r and \n
# replace \x0A \\n
# replace \x0D \\r

# Option to keep escape characters in the data field.  By default the
# escape character is dropped from the field.  Setting this to true leaves
# it in the field - it may then be processed by the character replacements
# above.

keep_escapes yes

