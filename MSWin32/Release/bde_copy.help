bde_copy: Extracts data from BDE files and copies them to the uncompressed 
          data files.

Syntax: bde_copy [options] input_file output_file [log_file]

input_file  is a BDE crs download file.  This can either be a specific file
            name, or the code for a bde extract (eg par1, sco).  In the latter
            case the file will be extracted from the BDE repository
            (see below).  More than one input file may be entered by separating 
            the names with '+' (eg par1+par9).  Where multiple input files are
            used they must have identical fields.  The data will be concatenated
            into the output file.

output_file is the name of the generated data file.  

log_file    records information about the conversion.  If it is not specified
            then the log information will be displayed directly

Options:

  -c xxx   Use xxx as the configuration file - see Configuration below
  -f xxx   Overrides the field defined in the BDE header.  xxx is formatted
           as name1=type1:name2=type2: ... Generally the BDE header is
           correct and this can be ignored.
  -w xxx   Where condition to filter fields. xxx is formatted as 
           name1=value1:name2=value2.  The operator can be = or !=.  This is
           interpreted as "where name1 = value1 and name2 = value2 ...."
  -o xxx   Specifies which field are copied to the output file.  Field names
           are specified as name1:name2:name3...  The default is to output
           all fields
  -e ##    Specifies the maximum number of errors permitted before the 
           translation is aborted (0 = unlimited number of errors)
  -l #     Defines the BDE level (0 or 5, default 0)
  -d ###   Defines the BDE dataset (YYYYMMDDhhmmss - default most recent)
  -a       Append data to existing file if already created
  -p ###   Add data (minus header) from files ### ('+' separated) to the
           extract
  -x       Search for additional data in archive folder
  -z       gzip compress the output file
  -n       Don't print metadata in output
  -h       Specifies that only the header will be translated.


BDE repository

If the input file is specified as a BDE file code (eg par1, sco) with no
filename or extension, then bde_copy will extract the file from the BDE 
repository.  The repository is \\bde_server\bde_data, though this can be 
overridden by the configuration file.  The level 0 and 5 extract folders 
are in the level_0 and level_5 subfolders of the repository.

The -l and -d options specify the BDE level (0=full, 5=incremental)
and BDE dataset (formatted as YYYYMMDDhhmmss, default being the most
recent dataset for chosen level).  

The -x option will additionally search  archive folders for files to 
add to the extract. The archive files are in the level_0_archive and 
level_5_archive subfolders of the repository.
Any file matching in the archive the bde file code (eg par1.xxx) will be used.  
The files will be processed in alphabetic order of names.  If the file name 
includes a string ".YYYYMMDDhhmmss." then it will only be included with 
BDE datasets after that date. 

Configuration

The bde_copy program may read several configuration files located in its config
data directory. It always tries to read the bde_copy.cfg file and reads additional
files as specified with the -c option.  This can include many configuration files,
separated by "+".  If a configuration file is just a name (without a path or extension)
then the program will assume that this is a file installed with the program (in
the program folder), called bde_copy.cfg.xxx where xxx is the name supplied.

Installed with bde_copy are the following configurations:
   clean - Replaces pipe characters, backslash characters, and new lines
           with a space, and removes carriage return characters
   mssql - Fixes dates before 1800, to comply with MS SQL server
   pgis -  Fixes spatial objects by adding 160 to longitudes and prefixing with
           the NZGD2000 SRID.
   utf8 -  Replaces non-ASCII characters with the utf-8 equivalent

bde_copy will first try to find these configuration files in the folder in
which the program is installed. If this fails it then tries BDECOPY_DATADIR
environment variable path. Lastly a compile time path as defined by the DATADIR
cmake configuration variable will be searched. On Linux this compile time path
will typically be /usr/share/bde-copy on Windows it will be
c:/Program Files/bde_copy
